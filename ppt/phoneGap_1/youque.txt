原生应用的优势：

提供最佳的用户体验、最优质的用户界面 和 最华丽的交互；
针对不同平台提供不同体验；
可节省带宽成本；  离线缓存 
可访问本地资源； 拍照 / 定位GPS 
盈利模式明朗。          


原生应用的劣势：
移植到不同平台上比较麻烦；
维护多个版本的成本比较高；
需要通过store或market确认；
盈利需要与第三方分成。



Web应用的优势如下:  
开发成本低；
适配多种移动设备的成本低； REM   
跨平台和终端；
迭代更新容易；
无需安装成本。



Web应用的劣势如下:
浏览体验短期内还无法超越原生应用；
不支持离线模式（HTML5解决这个问题）； 离线存储  
消息推送不够及时；  webSocket 
调用本地文件系统的能力弱。  





混合型应用可以说是为了弥补上面两种应用开发模式的缺陷而生，它是两者混合的产物，并且尽可能继承了双方的优势：
首先，它可以让众多Web开发人员几乎零成本地转型成移动应用开发者。
其次，相同的代码只需针对不同平台进行编译就能实现在多平台的分发，大大提高了多平台开发的效率。
而相较于Web应用，开发者可以通过包装好的接口调用大部分常用(GPS,photo)的系统API。


作为本文所讲的Cordova，Cordova正是混合型框架中的佼佼者，它基于标准的Web技术――
HTML、JavaScript和CSS，用JavaScript包装平台的API供开发者调用，具备强大的编译工具来为不同平台生成应用，
同时拥有丰富的第三方资源和产业链。
PhoneGap在Web应用和设备之间搭建了一个通信的桥梁，封装了移动设备的平台差异，
统一使用JavaScript接口访问设备本地API，以此提供了一个优秀的跨平台解决方案。
相信大家都对移动应用开发的框架使用已经有大概了解。接下来就讲述Cordova的环境部署。